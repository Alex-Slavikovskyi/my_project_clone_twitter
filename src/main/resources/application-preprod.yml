spring:
  datasource:
    password: ${DIGITAL_OCEAN_DB_PASSWORD}
    url: jdbc:postgresql://165.232.125.235:8080/fe8fs2tw
    username: postgres
    driver-classname: org.postgresql.Driver
    schema: classpath:/schema.sql
    continue-on-error: true
    initialize: true
    initialization-mode: always
  output:
    ansi:
      enabled: always
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
  config:
    activate:
      on-profile: preprod
  url:
    server: http://localhost:8080
    client: http://localhost:3000
jwt:
  secret: ${JWT_SECRET}
  secretRefresh: ${JWT_REFRESH_SECRET}
  secretPasswordReset: ${JWT_PASSWORD_RESET_SECRET}
  secretPasswordUpdate: ${JWT_PASSWORD_UPDATE_SECRET}
  expiration: 7200000 #2h
  expirationRefresh: 604800000 #7d
  expirationPasswordReset: 86400000 #24h
  expirationPasswordUpdate: 3600000 #1h
  header: Authorization
cloudinary:
  cloudName: ${CLOUDINARY_CLOUD_NAME}
  apiKey: ${CLOUDINARY_API_KEY}
  apiSecret: ${CLOUDINARY_API_SECRET}





